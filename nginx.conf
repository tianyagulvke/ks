# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;
        location /answer {       
            autoindex on;
            client_max_body_size 100M;    
            # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可
            # rewrite  ^.+api/?(.*)$ /$1 break;
            # 这里填写后端地址（后面一定不要忘记添加 / ）
            #test 
            proxy_pass http://8.140.226.144:8765;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            #add_header 'Content-Type' 'application/json' always;

            # 对于预检请求（OPTIONS方法），立即返回204 No Content
            if ($request_method = 'OPTIONS') {
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        location /holiday {       
            autoindex on;
            client_max_body_size 100M;    
            # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可
            # rewrite  ^.+api/?(.*)$ /$1 break;
            # 这里填写后端地址（后面一定不要忘记添加 / ）
            #test 
            proxy_pass http://8.140.226.144:8765;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            #add_header 'Content-Type' 'application/json' always;

            # 对于预检请求（OPTIONS方法），立即返回204 No Content
            if ($request_method = 'OPTIONS') {
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        location /survey {       
            autoindex on;
            client_max_body_size 100M;    
            # 如果后端在本地比如127.0.0.1或者localhost请解开下面的rewrite注释即可
            # rewrite  ^.+api/?(.*)$ /$1 break;
            # 这里填写后端地址（后面一定不要忘记添加 / ）
            #test 
            proxy_pass http://8.140.226.144:8765;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            #add_header 'Content-Type' 'application/json' always;

            # 对于预检请求（OPTIONS方法），立即返回204 No Content
            if ($request_method = 'OPTIONS') {
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # 处理前端路由
        location / {
            add_header X-Frame-Options "DENY";           
            root  /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;            
        }
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

